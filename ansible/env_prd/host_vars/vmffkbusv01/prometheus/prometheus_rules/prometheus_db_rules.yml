prometheus_db_rules:
  - alert: MysqlTooManyConnections
    expr: 'avg by (instance) (max_over_time(mysql_global_status_threads_connected[5m])) / avg by (instance) (mysql_global_variables_max_connections) * 100 > 80'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}MySQL too many connections (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}More than 80% of MySQL connections are in use on {{ $labels.instance }}\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: MysqlHighThreadsRunning
    expr: 'avg by (instance) (max_over_time(mysql_global_status_threads_running[5m])) / avg by (instance) (mysql_global_variables_max_connections) * 100 > 60'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}MySQL high threads running (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}More than 60% of MySQL connections are in running state on {{ $labels.instance }}\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: MysqlSlowQueries
    expr: 'rate(mysql_global_status_slow_queries[2m]) > 0'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}MySQL slow queries (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}MySQL server mysql has some new slow query.\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PostgresqlDown
    expr: 'pg_up == 0'
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: '{% raw %}Postgresql down (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Postgresql instance is down\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PostgresqlExporterError
    expr: 'pg_exporter_last_scrape_error > 0'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Postgresql exporter error (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Postgresql exporter is showing errors. A query may be buggy in query.yaml\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PostgresqlReplicationLag
    expr: '(pg_replication_lag) > 10 and ON(instance) (pg_replication_is_replica == 1)'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Postgresql replication lag (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}PostgreSQL replication lag is going up (> 10s)\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PostgresqlTooManyConnections
    expr: 'sum by (datname) (pg_stat_activity_count{datname!~"template.*|postgres"}) > pg_settings_max_connections * 0.9'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Postgresql too many connections (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}PostgreSQL instance has too many connections\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PostgresqlDeadLocks
    expr: 'rate(pg_stat_database_deadlocks{datname!~"template.*|postgres"}[1m]) > 0'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Postgresql dead locks (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}PostgreSQL has dead-locks\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PostgresqlSlowQueries
    expr: 'pg_slow_queries > 0'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Postgresql slow queries (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}PostgreSQL executes slow queries\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PostgresqlHighRollbackRate
    expr: 'rate(pg_stat_database_xact_rollback{datname!~"template.*"}[3m]) / rate(pg_stat_database_xact_commit{datname!~"template.*"}[3m]) > 0.02'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Postgresql high rollback rate (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Ratio of transactions being aborted compared to committed is > 2 %\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PostgresqllowXlogConsumption
    expr: 'rate(pg_xlog_position_bytes[1m]) < 100'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Postgresqllow XLOG consumption (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Postgres seems to be consuming XLOG very slowly\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PostgresqlTooManyDeadTuples
    expr: '((pg_stat_user_tables_n_dead_tup > 10000) / (pg_stat_user_tables_n_live_tup + pg_stat_user_tables_n_dead_tup)) >= 0.3 unless ON(instance) (pg_replication_is_replica == 1)'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Postgresql too many dead tuples (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}PostgreSQL dead tuples is too large\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PostgresqlSplitBrain
    expr: 'count(pg_replication_is_replica == 0) != 1'
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: '{% raw %}Postgresql split brain (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Split Brain, too many primary Postgresql databases in read-write mode\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PostgresqlPromotedNode
    expr: 'pg_replication_is_replica and changes(pg_replication_is_replica[1m]) > 0'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Postgresql promoted node (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Postgresql standby server has been promoted as primary node\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PostgresqlTooManyLocksAcquired
    expr: '((sum (pg_locks_count)) / (pg_settings_max_locks_per_transaction * pg_settings_max_connections)) > 0.20'
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: '{% raw %}Postgresql too many locks acquired (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Too many locks acquired on the database. If this alert happens frequently, we may need to increase the postgres setting max_locks_per_transaction.\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'