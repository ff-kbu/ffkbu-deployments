prometheus_selfmonitoring_rules:
  # - alert: Watchdog
  #   expr: vector(1)
  #   for: 10m
  #   labels:
  #     severity: warning
  #   annotations:
  #     description: 'This is an alert meant to ensure that the entire alerting pipeline is functional.
  #       This alert is always firing, therefore it should always be firing in Alertmanager
  #       and always fire against a receiver. There are integrations with various notification
  #       mechanisms that send a notification when this alert is not firing. For example the
  #       "DeadMansSnitch" integration in PagerDuty.'
  #     summary: 'Ensure entire alerting pipeline is functional'
  - alert: PrometheusAllTargetsMissing
    expr: 'count by (job) (up) == 0'
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: '{% raw %}Prometheus all targets missing (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}A Prometheus job does not have living target anymore.\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PrometheusConfigurationReloadFailure
    expr: 'prometheus_config_last_reload_successful != 1'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Prometheus configuration reload failure (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Prometheus configuration reload error\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PrometheusTooManyRestarts
    expr: 'changes(process_start_time_seconds{job=~"prometheus|pushgateway|alertmanager"}[15m]) > 2'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Prometheus too many restarts (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Prometheus has restarted more than twice in the last 15 minutes. It might be crashlooping.\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PrometheusNotConnectedToAlertmanager
    expr: 'prometheus_notifications_alertmanagers_discovered < 1'
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: '{% raw %}Prometheus not connected to alertmanager (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Prometheus cannot connect the alertmanager\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PrometheusRuleEvaluationFailures
    expr: 'increase(prometheus_rule_evaluation_failures_total[3m]) > 0'
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: '{% raw %}Prometheus rule evaluation failures (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Prometheus encountered {{ $value }} rule evaluation failures, leading to potentially ignored alerts.\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PrometheusTemplateTextExpansionFailures
    expr: 'increase(prometheus_template_text_expansion_failures_total[3m]) > 0'
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: '{% raw %}Prometheus template text expansion failures (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Prometheus encountered {{ $value }} template text expansion failures\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PrometheusRuleEvaluationSlow
    expr: 'prometheus_rule_group_last_duration_seconds > prometheus_rule_group_interval_seconds'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Prometheus rule evaluation slow (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Prometheus rule evaluation took more time than the scheduled interval. I indicates a slower storage backend access or too complex query.\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PrometheusNotificationsBacklog
    expr: 'min_over_time(prometheus_notifications_queue_length[10m]) > 0'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Prometheus notifications backlog (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}The Prometheus notification queue has not been empty for 10 minutes\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PrometheusTargetEmpty
    expr: 'prometheus_sd_discovered_targets == 0'
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: '{% raw %}Prometheus target empty (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Prometheus has no target in service discovery\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PrometheusTargetScrapingSlow
    expr: 'prometheus_target_interval_length_seconds{quantile="0.9"} > 180'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Prometheus target scraping slow (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Prometheus is scraping exporters slowly\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PrometheusLargeScrape
    expr: 'increase(prometheus_target_scrapes_exceeded_sample_limit_total[10m]) > 10'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Prometheus large scrape (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Prometheus has many scrapes that exceed the sample limit\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
  - alert: PrometheusTargetScrapeDuplicate
    expr: 'increase(prometheus_target_scrapes_sample_duplicate_timestamp_total[5m]) > 0'
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: '{% raw %}Prometheus target scrape duplicate (instance {{ $labels.instance }}){% endraw %}'
      description: '{% raw %}Prometheus has many samples rejected due to duplicate timestamps but different values\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}{% endraw %}'
