# tasks file
---
- name: install
  ansible.builtin.apt:
    name: "{{ fail2ban_dependencies }}"
    state: "{{ apt_install_state | default('latest') }}"
    update_cache: true
    cache_valid_time: "{{ apt_update_cache_valid_time | default(3600) }}"
  tags:
    - configuration
    - fail2ban
    - fail2ban-install

- name: get fail2ban version
  ansible.builtin.command: >
    fail2ban-server -V
  changed_when: false
  register: _fail2ban_version_raw
  tags:
    - configuration
    - fail2ban
    - fail2ban-install

- name: register fail2ban version
  ansible.builtin.set_fact:
    fail2ban_version: "{{ _fail2ban_version_raw.stdout | regex_search('([0-9]+\\.[0-9]+\\.[0-9]+)') }}"
  changed_when: false
  tags:
    - configuration
    - fail2ban
    - fail2ban-install

- name: remove configuration file - /etc/fail2ban/jail.d/defaults-debian.conf
  ansible.builtin.file:
    state: absent
    path: /etc/fail2ban/jail.d/defaults-debian.conf
  notify:
    - restart fail2ban
  tags:
    - configuration
    - fail2ban
    - fail2ban-configuration
    - fail2ban-configuration-delete

- name: update configuration file - /etc/fail2ban/fail2ban.local
  ansible.builtin.template:
    src: etc/fail2ban/fail2ban.local.j2
    dest: /etc/fail2ban/fail2ban.local
    owner: root
    group: root
    mode: "0644"
  notify:
    - restart fail2ban
  tags:
    - configuration
    - fail2ban
    - fail2ban-configuration
    - fail2ban-configuration-update

- name: update configuration file - /etc/fail2ban/jail.local
  ansible.builtin.template:
    src: etc/fail2ban/jail.local.j2
    dest: /etc/fail2ban/jail.local
    owner: root
    group: root
    mode: "0644"
  notify:
    - restart fail2ban
  tags:
    - configuration
    - fail2ban
    - fail2ban-configuration
    - fail2ban-configuration-update

- name: copy filters
  ansible.builtin.template:
    src: "{{ fail2ban_filterd_path }}/{{ item }}.j2"
    dest: "/etc/fail2ban/filter.d/{{ item | basename | regex_replace('\\.j2$')}}"
    owner: root
    group: root
    mode: "0644"
  loop: "{{ fail2ban_custom_filters }}"
  when:
    - fail2ban_filterd_path is defined
    - fail2ban_custom_filters | length
  notify:
    - restart fail2ban
  tags:
    - configuration
    - fail2ban
    - fail2ban-filters

- name: copy actions
  ansible.builtin.template:
    src: "{{ fail2ban_actiond_path }}/{{ item }}.j2"
    dest: "/etc/fail2ban/action.d/{{ item | basename | regex_replace('\\.j2$')}}"
    owner: root
    group: root
    mode: "0644"
  loop: "{{ fail2ban_custom_actions }}"
  when:
    - fail2ban_actiond_path is defined
    - fail2ban_custom_actions | length
  notify:
    - restart fail2ban
  tags:
    - configuration
    - fail2ban
    - fail2ban-actions

- name: copy jails
  ansible.builtin.template:
    src: "{{ fail2ban_jaild_path }}/{{ item }}.j2"
    dest: "/etc/fail2ban/jail.d/{{ item | basename | regex_replace('\\.j2$')}}"
    owner: root
    group: root
    mode: "0644"
  loop: "{{ fail2ban_custom_jails }}"
  when:
    - fail2ban_jaild_path is defined
    - fail2ban_custom_jails | length
  notify:
    - restart fail2ban
  tags:
    - configuration
    - fail2ban
    - fail2ban-jails

- name: start and enable service
  ansible.builtin.service:
    name: fail2ban
    state: "{{ service_default_state | default('started') }}"
    enabled: "{{ service_default_enabled | default(true) | bool }}"
  tags:
    - configuration
    - fail2ban
    - fail2ban-start-enable-service

- ansible.builtin.meta: flush_handlers

- name: check fail2ban
  ansible.builtin.systemd:
    name: fail2ban.service
  register: f2b_status
  failed_when: false
  changed_when: false

- ansible.builtin.fail:
    msg: "Fail2Ban failed to start - check logs!"
  when: f2b_status.status.ActiveState == 'failed'