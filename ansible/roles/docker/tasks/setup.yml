---
- name: Create /etc/docker directory
  ansible.builtin.file:
    path: /etc/docker
    state: directory

- name: Write /etc/docker/daemon.json
  ansible.builtin.template:
    src: "daemon.json.j2"
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: "0600"

- name: Ensure Docker is stopped
  ansible.builtin.service:
    name: docker
    state: stopped

- name: Unmount shm
  ansible.posix.mount:
    path: shm
    state: unmounted

- name: Create docker root path
  ansible.builtin.file:
    path: "{{ docker_data_root_path }}"
    state: directory
    mode: "0755"
  register: root_path_setup
  when: "docker_data_root_path != '/var/lib/docker'"

- name: Delete /var/lib/docker
  ansible.builtin.file:
    path: /var/lib/docker
    state: absent
  when: "docker_data_root_path != '/var/lib/docker'"

- name: "Create symlink from /var/lib/docker to {{ docker_data_root_path }}"
  ansible.builtin.file:
    src: "{{ docker_data_root_path }}"
    dest: /var/lib/docker
    state: link
  when: "docker_data_root_path != '/var/lib/docker'"

- name: Ensure Docker is started and enabled at boot.
  ansible.builtin.service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"

- name: Log into registry
  community.docker.docker_login:
    registry: "{{ item.name }}"
    username: "{{ item.username | default(omit) }}"
    password: "{{ item.password | default(omit) }}"
  loop: "{{ docker_registries }}"
  when: docker_registries | default([]) | length
  no_log: true # hide password

- name: Add docker networks
  community.docker.docker_network:
    name: "{{ item }}"
  loop: "{{ docker_networks }}"
